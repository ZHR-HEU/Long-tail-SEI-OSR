# ============================================================
# 两阶段训练配置 - Stage1基线 + Stage2 CRT with Cost-Sensitive
# ============================================================

exp_name: "adsb_baseline_to_costsensitive_crt"
seed: 42
device: "cuda"
gpus: "1,2,3"
amp: true
console_log_interval: 1

create_imbalance: true

# ------------------------------------------------------------
# 数据配置
# ------------------------------------------------------------
data:
  path_train: "/home/dell/md3/zhahaoran/data/ADS-B_Train_100X360-2_5-10-15-20dB.mat"
  path_val: null
  path_test: "/home/dell/md3/zhahaoran/data/ADS-B_test_100X40_5-10-15-20dB.mat"
  val_ratio: 0.2

  batch_size: 1024
  num_workers: 4
  pin_memory: true
  drop_last: true

  target_length: 4800
  normalize: true
  in_memory: true

  imbalance_ratio: 100.0

# ------------------------------------------------------------
# 模型配置
# ------------------------------------------------------------
model:
  name: "ConvNetADSB"
  dropout: 0.1
  use_attention: true
  norm_kind: "auto"

# ------------------------------------------------------------
# 损失函数配置 - Stage 1: 标准交叉熵（无重加权）
# ------------------------------------------------------------
loss:
  name: "CrossEntropy"
  # 无特殊参数，标准baseline

# ------------------------------------------------------------
# 采样策略配置 - Stage 1: 无重采样（自然分布）
# ------------------------------------------------------------
sampling:
  # Stage-1采样策略
  name: "none"  # none | inv_freq | class_uniform | sqrt | power | progressive_power

  # power采样参数
  alpha: 0.5

  # progressive_power采样参数
  alpha_start: 0.5
  alpha_end: 0.0

# ------------------------------------------------------------
# 训练配置
# ------------------------------------------------------------
training:
  epochs: 200
  lr: 1e-3
  weight_decay: 1e-4
  optimizer: "Adam"
  grad_clip: 1.0
  label_smoothing: 0.0  # 标准CE，不使用label smoothing

# ------------------------------------------------------------
# 学习率调度器配置
# ------------------------------------------------------------
scheduler:
  name: "cosine"
  warmup_epochs: 5
  warmup_multiplier: 1.0

# ------------------------------------------------------------
# 早停配置
# ------------------------------------------------------------
early_stopping:
  patience: 20
  monitor: "val_acc"
  mode: "max"

# ------------------------------------------------------------
# 评估配置
# ------------------------------------------------------------
evaluation:
  eval_logit_adjust: "none"
  eval_logit_tau: 1.0

# ------------------------------------------------------------
# 实验分组配置
# ------------------------------------------------------------
experiment:
  grouping: "auto"
  many_thresh: 100
  few_thresh: 20

# ------------------------------------------------------------
# 第二阶段训练配置 - CRT + Progressive Sampling + Cost-Sensitive
# ------------------------------------------------------------
stage2:
  enabled: true
  mode: "crt"  # Classifier Re-Training: 冻结backbone，重训练分类器
  epochs: 200

  # 优化器配置
  lr: 1e-4
  weight_decay: 1e-4
  optimizer: "Adam"

  # 损失函数：Cost-Sensitive Cross-Entropy（自动生成代价）
  loss: "CostSensitiveCE"
  cost_strategy: "auto"  # 自动逆频率生成代价向量
  # 可选策略：
  #   - "auto": 逆频率 (1/n_c)
  #   - "sqrt": 平方根逆频率 (1/sqrt(n_c))
  #   - "log": 对数逆频率 (1/log(1+n_c))

  # 采样策略：Progressive Power Sampling（渐进式重采样）
  sampler: "progressive_power"  # 或null表示继承

    # Stage-2的progressive参数（如果sampler=progressive_power）
  alpha_start: 0.5
  alpha_end: 0.0

  # 批归一化冻结（CRT标准做法）
  freeze_bn: true

  # 分类器学习率倍数（CRT模式下无效，因为只有分类器被训练）
  clf_lr_mult: 1.0

# ------------------------------------------------------------
# Progressive Power Sampling 参数（供 Stage2 使用）
# ------------------------------------------------------------
# 这些参数被 stage2.sampler="progressive_power" 引用
sampling_progressive:
  alpha_start: 0.5  # 初始 alpha（接近原始分布）
  alpha_end: 0.0    # 最终 alpha（类均匀采样）
  # alpha 随 epoch 线性衰减：
  #   - alpha=1.0: 原始分布
  #   - alpha=0.5: 平方根重采样
  #   - alpha=0.0: 类均匀采样

# ------------------------------------------------------------
# 第三阶段校准配置（禁用）
# ------------------------------------------------------------
stage3:
  mode: "none"
  tau_norm: 1.0
  logit_tau: 1.0

# ------------------------------------------------------------
# 可视化配置
# ------------------------------------------------------------
visualization:
  enabled: true
  dpi: 400
  panel_mm: 85
  panel_scale: 1.0

  max_samples: 5000  # 快速预览，设置为 null 使用全部数据

  # 基础训练分析
  plot_training_curves: true
  plot_learning_rate: true
  plot_class_distribution: true

  # 特征可视化
  plot_tsne_2d: true
  plot_tsne_3d: false  # 计算密集，快速实验时关闭
  tsne_perplexity: 30
  tsne_n_iter: 1000

  # 性能分析
  plot_confusion_matrix: true
  cm_normalize: true
  plot_per_class_acc: true
  plot_group_performance: true

  # 不平衡学习专用可视化
  plot_sample_vs_performance: true
  plot_confidence_dist: true
  plot_top_confusions: true
  top_confusions_k: 10

  plot_pr_curves: false  # 8个类别，可以启用
  plot_calibration: true
  calibration_bins: 10

  class_names: null

# ------------------------------------------------------------
# 实验说明
# ------------------------------------------------------------
# Stage 1 (Baseline):
#   - 标准交叉熵损失（无重加权）
#   - 自然采样（无重采样）
#   - 目的：建立baseline性能
#
# Stage 2 (CRT + Cost-Sensitive + Progressive Sampling):
#   - 冻结backbone，只重训练分类器（CRT策略）
#   - Cost-Sensitive CE 损失（自动生成代价向量）
#   - Progressive Power Sampling（alpha从0.5衰减到0.0）
#   - 目的：针对长尾类别优化分类器
#
# 对比方法：
#   1. Baseline (Stage1 only): 标准训练
#   2. CRT alone: stage2.sampler="same"
#   3. Progressive Sampling alone: stage2.loss="CrossEntropy"
#   4. Full method: 当前配置（CRT + CostSensitive + Progressive）

hydra:
  output_subdir: null
  job:
    chdir: false